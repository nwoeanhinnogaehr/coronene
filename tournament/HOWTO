How to run a tournament:

1) Save some versions of the program with the save-version.sh file.
   Make sure you pass the --release flag to cargo! save-version.sh will
   copy the most recent build from target/release/coronene to the
   tournament/builds directory with the given name.

   Then, run a tournament with the run-tournament.sh file. Just give it
   the names of two executables in the tournament/builds directory.

   You can specify the board size by passing --size to run-tournament.

   Programs alternate playing each opening in the set of openings
   provided.  Each round corresponds to each program playing black once
   for each opening. You can specify the number of rounds with --rounds.

   Given the board size, the script looks for the corresponding openings file
   under tournament/openings (e.g. 11x11-all-1ply), but you can also specify
   an openings files using the "--openings" option.

   The directory for this specific tournament is automatically
   created under jobs/ and will contain all sgfs, results file, etc.

2) The 'results' file

The 'results' file contains a listing of the completed games and
results.  If you stop the tournament script for any reason (or if it
detects an error and stops itself), you will lose only the last game
played.  You can continue the tournament using the same command you used
to start it.

3) the nnnn.sgf files

These are the actual games played.  Each sgf file lists the exact
arguments sent to the programs so you should be able to recreate the
game as long as your programs are deterministic (i.e, after the initial
seed value to their random number generator).

4) Getting a summary

At any time, you may run

   ./summary --file [results file] [--showTable] [--count n]

to obtain a compact summary of the tournament results so far.  The
results will be broken down by opening. Use the "--showTable" command if
you want to games down by opening and show which were split and
non-split. Use the "--count" option if you want the summary only for
the first n games (where n is a positive integer; e.g. "--count 242"
gives a summary of the first round when using all 11x11 openings).

5) The openings

The available openings are found under the openings/ directory.
Each file contains exactly one opening per line. Make sure there
are no extra empty lines at the end of the file, as currently, every
line is used as an opening.

6) Other tools

The asymmetric.py script shows which openings are being stolen (i.e.
won as both black and white) by each player. The difference.py script
shows what game results differed between two tournaments.

This code is mostly from benzene.
